version: "3.8"

services:
  traefik:
    container_name: traefik
    image: "traefik:${TRAEFIK_VERSION:-latest}"
    restart: ${TRAEFIK_RESTART:-no}
    security_opt:
      - "no-new-privileges:true"
    networks:
      - proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-data/traefik.yml:/traefik.yml:ro"
      - "./traefik-data/acme.json:/acme.json"
      - "./traefik-data/configurations:/configurations"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.traefik.entrypoints=${TRAEFIK_ENTRYPOINT:-web}
      - traefik.http.routers.traefik.rule=Host(${TRAEFIK_DOMAIN:-`traefik.localhost`})
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=user-auth@file

  portainer:
    container_name: portainer
    profiles: ["all", "portainer"]
    image: "portainer/portainer-ce:${PORTAINER_VERSION:-latest}"
    restart: ${PORTAINER_RESTART:-no}
    security_opt:
      - "no-new-privileges:true"
    networks:
      - proxy
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./portainer-data:/data"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.portainer.entrypoints=${PORTAINER_ENTRYPOINT:-web}
      - traefik.http.routers.portainer.rule=Host(${PORTAINER_DOMAIN:-`portainer.localhost`})
      - traefik.http.routers.portainer.service=portainer
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    depends_on:
      - traefik

  mariadb:
    container_name: mariadb
    profiles: ["all", "mariadb", "mysql", "phpmyadmin"]
    image: mariadb:${MARIADB_VERSION:-latest}
    restart: ${MARIADB_RESTART:-no}
    volumes:
      - ./mariadb-data/data:/var/lib/mysql
      - ./mariadb-data/init:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    environment:
      - TZ=${MARIADB_TZ}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD:-root}
    networks:
      - proxy

  phpmyadmin:
    container_name: phpmyadmin
    profiles: ["all", "mariadb", "mysql", "phpmyadmin"]
    image: phpmyadmin:${PMA_VERSION:-latest}
    restart: ${PMA_RESTART:-no}
    depends_on:
      - mariadb
    environment:
      - PMA_ARBITRARY=1
      - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
      - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
      # Autologin root
      - PMA_HOST=mariadb
      - PMA_USER=root
      - PMA_PASSWORD=${MARIADB_ROOT_PASSWORD:-root}
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.phpmyadmin.entrypoints=${PMA_ENTRYPOINT:-web}
      - traefik.http.routers.phpmyadmin.rule=Host(${PMA_DOMAIN:-`pma.localhost`})
    networks:
      - proxy
    depends_on:
      - mariadb
      - traefik

  postgres:
    container_name: postgres
    profiles: ["all", "postgres", "pgadmin"]
    image: postgres:${POSTGRES_VERSION:-latest}
    restart: ${POSTGRES_RESTART:-no}
    volumes:
      - ./postgres-data/data:/var/lib/postgresql/data
      - ./postgres-data/init:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    networks:
      - proxy

  pgadmin:
    container_name: pgadmin
    profiles: ["all", "postgres", "pgadmin"]
    image: dpage/pgadmin4:${PGADMIN_VERSION:-latest}
    restart: ${PGADMIN_RESTART:-no}
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.pgadmin.entrypoints=${PGADMIN_ENTRYPOINT:-web}
      - traefik.http.routers.pgadmin.rule=Host(${PGADMIN_DOMAIN:-`pgadmin.localhost`})
    networks:
      - proxy
    depends_on:
      - postgres
      - traefik

  redis:
    container_name: redis
    profiles: ["all", "redis"]
    restart: ${REDIS_RESTART:-no}
    image: redis:${REDIS_VERSION:-latest}
    volumes:
      - ./redis-data:/data
    command: --requirepass ${REDIS_PASSWORD:-redis}
    ports:
      - 6379:6379
    networks:
      - proxy

networks:
  proxy:
    external: true
